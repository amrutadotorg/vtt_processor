name: Build Cross-Platform Executables
on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            output_name: vtt_processor.exe
            asset_name: vtt_processor-windows
            pyinstaller_args: --onefile --windowed --name vtt_processor
          - os: macos-latest
            output_name: vtt_processor_mac
            asset_name: vtt_processor-macos
            pyinstaller_args: --onefile --windowed --name vtt_processor_mac
          - os: ubuntu-latest
            output_name: vtt_processor_linux
            asset_name: vtt_processor-linux
            pyinstaller_args: --onefile --windowed --name vtt_processor_linux
    
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build with PyInstaller
      run: pyinstaller ${{ matrix.pyinstaller_args }} --additional-hooks-dir=. vtt_processor.py
    
    - name: Create entitlements file for macOS
      if: matrix.os == 'macos-latest'
      run: |
        cat > entitlements.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
            <true/>
            <key>com.apple.security.cs.allow-jit</key>
            <true/>
            <key>com.apple.security.cs.disable-library-validation</key>
            <true/>
        </dict>
        </plist>
        EOF
    
    - name: Sign macOS app with entitlements
      if: matrix.os == 'macos-latest'
      run: |
        codesign --force --deep --entitlements entitlements.plist --sign - dist/${{ matrix.output_name }}
    
    - name: Set executable permissions
      if: matrix.os != 'windows-latest'
      run: chmod +x dist/${{ matrix.output_name }}
    
    - name: Install create-dmg for macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install create-dmg
    
    - name: Create DMG for macOS
      if: matrix.os == 'macos-latest'
      run: |
        mkdir -p dmg_contents/Applications
        cp -R dist/${{ matrix.output_name }} dmg_contents/
        chmod +x dmg_contents/${{ matrix.output_name }}
        create-dmg \
          --volname "VTT Processor" \
          --volicon "icon.icns" \
          --window-pos 200 120 \
          --window-size 600 400 \
          --icon-size 100 \
          --icon "${{ matrix.output_name }}" 150 190 \
          --hide-extension "${{ matrix.output_name }}" \
          --app-drop-link 450 190 \
          "${{ matrix.asset_name }}.dmg" \
          "dmg_contents/"
        
    - name: Upload macOS DMG artifact
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}-dmg
        path: ${{ matrix.asset_name }}.dmg
        
    - name: Upload non-macOS artifact
      if: matrix.os != 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.output_name }}
        
    - name: Create Release (macOS DMG)
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'macos-latest'
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.asset_name }}.dmg
        
    - name: Create Release (non-macOS)
      if: startsWith(github.ref, 'refs/tags/') && matrix.os != 'macos-latest'
      uses: softprops/action-gh-release@v1
      with:
        files: dist/${{ matrix.output_name }}
